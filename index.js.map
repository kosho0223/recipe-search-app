{"mappings":"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","sources":["scripts.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\n\n// Firebaseプロジェクトの設定\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBA2NazmqtWXZ5U7PExOvLf5w13jq1wR2Y\",\n    authDomain: \"recipe-search-e481e.firebaseapp.com\",\n    projectId: \"recipe-search-e481e\",\n    storageBucket: \"recipe-search-e481e\",\n    messagingSenderId: \"801965558067\",\n    appId: \"1:801965558067:web:6efe116b3739d877c45646\",\n    measurementId: \"G-BK5N1FDQZQ\"\n};\n\n// Firebase初期化\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nlet ingredientSelectCount = 1;\n\ndocument.getElementById('add-ingredient-button').addEventListener('click', () => {\n    ingredientSelectCount++;\n    const newSelect = document.createElement('select');\n    newSelect.id = `ingredient-select-${ingredientSelectCount}`;\n    newSelect.name = 'ingredient';\n    newSelect.innerHTML = document.getElementById('ingredient-select-1').innerHTML;\n\n    const newLabel = document.createElement('label');\n    newLabel.htmlFor = newSelect.id;\n    newLabel.textContent = `食材${ingredientSelectCount}から検索:`;\n\n    const container = document.getElementById('ingredient-select-container');\n    container.appendChild(newLabel);\n    container.appendChild(newSelect);\n});\n\ndocument.getElementById('recipe-form').addEventListener('submit', async (event) => {\n    event.preventDefault();\n    \n    const ingredients = [];\n    for (let i = 1; i <= ingredientSelectCount; i++) {\n        const ingredient = document.getElementById(`ingredient-select-${i}`).value;\n        if (ingredient) {\n            ingredients.push(ingredient);\n        }\n    }\n    const dish = document.getElementById('dish-select').value;\n    let searchCriteria;\n\n    if (ingredients.length > 0) {\n        searchCriteria = ['ingredients', ingredients];\n    } else if (dish) {\n        searchCriteria = ['name', dish];\n    } else {\n        alert('食材または料理名を選択してください。');\n        return;\n    }\n\n    console.log('Searching for recipes with:', searchCriteria[1]);\n\n    try {\n        let q;\n        if (searchCriteria[0] === 'ingredients') {\n            q = query(collection(db, 'recipes'));\n        } else {\n            q = query(collection(db, 'recipes'), where('name', '==', searchCriteria[1]));\n        }\n        const querySnapshot = await getDocs(q);\n        const results = querySnapshot.docs.map(doc => doc.data());\n        \n        let filteredResults;\n        if (searchCriteria[0] === 'ingredients') {\n            // 選択されたすべての食材を含むレシピをフィルタリング\n            filteredResults = results.filter(recipe => searchCriteria[1].every(ingredient => recipe.ingredients.includes(ingredient)));\n        } else {\n            // 料理名で検索された場合、結果はそのまま\n            filteredResults = results;\n        }\n        \n        console.log('Filtered Results:', filteredResults);\n\n        displayResults(filteredResults, searchCriteria[0]);\n    } catch (error) {\n        console.error('Error getting documents: ', error);\n    }\n});\n\ndocument.getElementById('reset-button').addEventListener('click', () => {\n    document.getElementById('recipe-form').reset();\n    document.getElementById('results').innerHTML = '';\n    // セレクトボックスのリセット\n    const container = document.getElementById('ingredient-select-container');\n    while (container.children.length > 2) { // 最初の1つのセレクトボックスを残す\n        container.removeChild(container.lastChild);\n    }\n    ingredientSelectCount = 1;\n});\n\nfunction displayResults(results, criteria) {\n    const resultsDiv = document.getElementById('results');\n    resultsDiv.innerHTML = '';\n\n    if (results.length > 0) {\n        results.forEach(dish => {\n            const dishElement = document.createElement('div');\n            if (criteria === 'name') {\n                dishElement.textContent = `${dish.name}: ${dish.ingredients.join(', ')}`;\n            } else {\n                dishElement.textContent = dish.name;\n            }\n            resultsDiv.appendChild(dishElement);\n        });\n    } else {\n        resultsDiv.textContent = '一致する料理が見つかりませんでした。';\n    }\n}\n\n\n\n\n"],"names":[],"version":3,"file":"index.js.map"}